//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MPExtended.Libraries.Service.Strings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class UI {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal UI() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MPExtended.Libraries.Service.Strings.UI", typeof(UI).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to give the application &apos;{0}&apos; (with IP address {1}) full access to the MPExtended services?.
        /// </summary>
        public static string AccessRequest {
            get {
                return ResourceManager.GetString("AccessRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deny.
        /// </summary>
        public static string AccessRequestDenyAccess {
            get {
                return ResourceManager.GetString("AccessRequestDenyAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable access requests of clients.
        /// </summary>
        public static string AccessRequestEnable {
            get {
                return ResourceManager.GetString("AccessRequestEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grant access.
        /// </summary>
        public static string AccessRequestGrantAccess {
            get {
                return ResourceManager.GetString("AccessRequestGrantAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select user:.
        /// </summary>
        public static string AccessRequestSelectUser {
            get {
                return ResourceManager.GetString("AccessRequestSelectUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you wish to allow &apos;{0}&apos; access? (If so, assign a user in the next step).
        /// </summary>
        public static string AccessRequestWifiRemote {
            get {
                return ResourceManager.GetString("AccessRequestWifiRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action needs administrative rights..
        /// </summary>
        public static string ActionNeedsAdmin {
            get {
                return ResourceManager.GetString("ActionNeedsAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently active streams.
        /// </summary>
        public static string ActiveStreams {
            get {
                return ResourceManager.GetString("ActiveStreams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add account.
        /// </summary>
        public static string AddAccount {
            get {
                return ResourceManager.GetString("AddAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can configure authentication for MPExtended here. It is recommended that you enable authentication and change the password (or delete) of the default account, admin. Never make an installation accessible from the internet without using authentication and secure passwords..
        /// </summary>
        public static string AuthenticationIntroText {
            get {
                return ResourceManager.GetString("AuthenticationIntroText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Autodetection.
        /// </summary>
        public static string Autodetection {
            get {
                return ResourceManager.GetString("Autodetection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The services support autodetection via Bonjour/Zeroconf, which allows clients on the local network to automatically find the services and configure themselves..
        /// </summary>
        public static string AutodetectionText {
            get {
                return ResourceManager.GetString("AutodetectionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking your Bonjour installation....
        /// </summary>
        public static string BonjourChecking {
            get {
                return ResourceManager.GetString("BonjourChecking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bonjour isn&apos;t installed on your computer. To use this feature, .
        /// </summary>
        public static string BonjourNotInstalled {
            get {
                return ResourceManager.GetString("BonjourNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to please download Bonjour. .
        /// </summary>
        public static string BonjourNotInstalledDownload {
            get {
                return ResourceManager.GetString("BonjourNotInstalledDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse.
        /// </summary>
        public static string Browse {
            get {
                return ResourceManager.GetString("Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to check for updates.
        /// </summary>
        public static string CheckForUpdates {
            get {
                return ResourceManager.GetString("CheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to checking for updates....
        /// </summary>
        public static string CheckingForUpdates {
            get {
                return ResourceManager.GetString("CheckingForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clean cache.
        /// </summary>
        public static string CleanCaches {
            get {
                return ResourceManager.GetString("CleanCaches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cache has been cleaned successfully!.
        /// </summary>
        public static string CleanCacheSucceeded {
            get {
                return ResourceManager.GetString("CleanCacheSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can configure the port on which WebMediaPortal runs here. If you change this value from the default of 8080, you have to configure your firewall manually. .
        /// </summary>
        public static string ConfigureWebMPPort {
            get {
                return ResourceManager.GetString("ConfigureWebMPPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid credentials.
        /// </summary>
        public static string CredentialsInvalid {
            get {
                return ResourceManager.GetString("CredentialsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Credentials validated.
        /// </summary>
        public static string CredentialsValid {
            get {
                return ResourceManager.GetString("CredentialsValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default audio language:.
        /// </summary>
        public static string DefaultAudioLanguage {
            get {
                return ResourceManager.GetString("DefaultAudioLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default language.
        /// </summary>
        public static string DefaultLanguage {
            get {
                return ResourceManager.GetString("DefaultLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some clients don&apos;t support configuring the audio and subtitle language on a per-stream basis. You can configure the default audio and subtitle language for tehse clients here..
        /// </summary>
        public static string DefaultLanguageExplanation {
            get {
                return ResourceManager.GetString("DefaultLanguageExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default subtitle language:.
        /// </summary>
        public static string DefaultSubtitleLanguage {
            get {
                return ResourceManager.GetString("DefaultSubtitleLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete account.
        /// </summary>
        public static string DeleteAccount {
            get {
                return ResourceManager.GetString("DeleteAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discarding invalid changes made on the social tab..
        /// </summary>
        public static string DiscardingInvalidChangesSocialTab {
            get {
                return ResourceManager.GetString("DiscardingInvalidChangesSocialTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Documentation:.
        /// </summary>
        public static string Documentation {
            get {
                return ResourceManager.GetString("Documentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Donate to MPExtended.
        /// </summary>
        public static string DonateToMPExtended {
            get {
                return ResourceManager.GetString("DonateToMPExtended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable.
        /// </summary>
        public static string Enable {
            get {
                return ResourceManager.GetString("Enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable authentication (recommended!).
        /// </summary>
        public static string EnableAuthentication {
            get {
                return ResourceManager.GetString("EnableAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable autodetection.
        /// </summary>
        public static string EnableAutodetection {
            get {
                return ResourceManager.GetString("EnableAutodetection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable HTTPS.
        /// </summary>
        public static string EnableHTTPS {
            get {
                return ResourceManager.GetString("EnableHTTPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export.
        /// </summary>
        public static string Export {
            get {
                return ResourceManager.GetString("Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exported logs and configuration data to {0}.
        /// </summary>
        public static string ExportedLogsAndConfig {
            get {
                return ResourceManager.GetString("ExportedLogsAndConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export logs and configuration.
        /// </summary>
        public static string ExportLogsAndConfiguration {
            get {
                return ResourceManager.GetString("ExportLogsAndConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom.
        /// </summary>
        public static string ExternalIpCustom {
            get {
                return ResourceManager.GetString("ExternalIpCustom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically detect external IP.
        /// </summary>
        public static string ExternalIpDefault {
            get {
                return ResourceManager.GetString("ExternalIpDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to External address.
        /// </summary>
        public static string ExternalIpLabel {
            get {
                return ResourceManager.GetString("ExternalIpLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to failed to retrieve update information.
        /// </summary>
        public static string FailedToRetrieveUpdateInformation {
            get {
                return ResourceManager.GetString("FailedToRetrieveUpdateInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forum:.
        /// </summary>
        public static string Forum {
            get {
                return ResourceManager.GetString("Forum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Homepage:.
        /// </summary>
        public static string Homepage {
            get {
                return ResourceManager.GetString("Homepage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Due to limitations in Windows and IIS Express, you can only use ports between 44300 and 44399 for HTTPS. You also have to configure your firewall manually to allow these connections.
        ///
        ///Please note that it isn&apos;t possible to configure the SSL/TLS certificate used. When using HTTPS, you will get warnings in your browser about a potentially untrusted connection. .
        /// </summary>
        public static string HTTPSDisclaimer {
            get {
                return ResourceManager.GetString("HTTPSDisclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port you entered for HTTPS is invalid. You can use only ports 44300 until 44399 for HTTPS. .
        /// </summary>
        public static string HTTPSInvalidPort {
            get {
                return ResourceManager.GetString("HTTPSInvalidPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTPS Port:.
        /// </summary>
        public static string HTTPSPort {
            get {
                return ResourceManager.GetString("HTTPSPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include authentication for user:.
        /// </summary>
        public static string IncludeAuthentication {
            get {
                return ResourceManager.GetString("IncludeAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IRC:
        ///   irc.freenode.net / channel #mp-extended.
        /// </summary>
        public static string IRCText {
            get {
                return ResourceManager.GetString("IRCText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string Language {
            get {
                return ResourceManager.GetString("Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log and configuration archive (.zip).
        /// </summary>
        public static string LogAndConfigurationArchive {
            get {
                return ResourceManager.GetString("LogAndConfigurationArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log file:.
        /// </summary>
        public static string LogFile {
            get {
                return ResourceManager.GetString("LogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log files.
        /// </summary>
        public static string LogFiles {
            get {
                return ResourceManager.GetString("LogFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login failed..
        /// </summary>
        public static string LoginFailed {
            get {
                return ResourceManager.GetString("LoginFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login successful!.
        /// </summary>
        public static string LoginSuccessful {
            get {
                return ResourceManager.GetString("LoginSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Media.
        /// </summary>
        public static string Media {
            get {
                return ResourceManager.GetString("Media", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MPExtended is an open source project that aims at providing access to MediaPortal from all over the world, using clients for your webbrowser, Android, iOS and more.
        ///
        ///This is the service component, which provides access to the databases and media files for all clients..
        /// </summary>
        public static string MPExtendedIntroduction {
            get {
                return ResourceManager.GetString("MPExtendedIntroduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network drives.
        /// </summary>
        public static string NetworkDrives {
            get {
                return ResourceManager.GetString("NetworkDrives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you have put your media files on a different system (such as a dedicated server or a NAS), MPExtended needs the credentials for this drive to access them. Usually this are the credentials of your Windows account..
        /// </summary>
        public static string NetworkDrivesText {
            get {
                return ResourceManager.GetString("NetworkDrivesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to no update available.
        /// </summary>
        public static string NoUpdateAvailable {
            get {
                return ResourceManager.GetString("NoUpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string Password {
            get {
                return ResourceManager.GetString("Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugin.
        /// </summary>
        public static string Plugin {
            get {
                return ResourceManager.GetString("Plugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port:.
        /// </summary>
        public static string Port {
            get {
                return ResourceManager.GetString("Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can configure the port on which the services listen here..
        /// </summary>
        public static string PortText {
            get {
                return ResourceManager.GetString("PortText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can scan the QR code with supported clients to add this MPExtended installation automatically..
        /// </summary>
        public static string QRCodeIntroText {
            get {
                return ResourceManager.GetString("QRCodeIntroText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save barcode as image file.
        /// </summary>
        public static string SaveBarcodeAsImageFile {
            get {
                return ResourceManager.GetString("SaveBarcodeAsImageFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saved barcode to {0}!.
        /// </summary>
        public static string SavedBarcodeTo {
            get {
                return ResourceManager.GetString("SavedBarcodeTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save to file.
        /// </summary>
        public static string SaveToFile {
            get {
                return ResourceManager.GetString("SaveToFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scroll to end.
        /// </summary>
        public static string ScrollToEnd {
            get {
                return ResourceManager.GetString("ScrollToEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Name.
        /// </summary>
        public static string ServiceName {
            get {
                return ResourceManager.GetString("ServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not installed.
        /// </summary>
        public static string ServiceNotInstalled {
            get {
                return ResourceManager.GetString("ServiceNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MPExtended Service is not installed. Please make sure your installation is correct..
        /// </summary>
        public static string ServiceNotInstalledPopup {
            get {
                return ResourceManager.GetString("ServiceNotInstalledPopup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Services.
        /// </summary>
        public static string Services {
            get {
                return ResourceManager.GetString("Services", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service started.
        /// </summary>
        public static string ServiceStarted {
            get {
                return ResourceManager.GetString("ServiceStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service starting.
        /// </summary>
        public static string ServiceStartingFixed {
            get {
                return ResourceManager.GetString("ServiceStartingFixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service status.
        /// </summary>
        public static string ServiceStatus {
            get {
                return ResourceManager.GetString("ServiceStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service stopped.
        /// </summary>
        public static string ServiceStopped {
            get {
                return ResourceManager.GetString("ServiceStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service status unknown.
        /// </summary>
        public static string ServiceUnknown {
            get {
                return ResourceManager.GetString("ServiceUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Site.
        /// </summary>
        public static string Site {
            get {
                return ResourceManager.GetString("Site", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MPExtended supports synchronization of the movies and shows you watch in clients to Trakt and follw.it. You can configure your account for these sites here..
        /// </summary>
        public static string SocialIntroText {
            get {
                return ResourceManager.GetString("SocialIntroText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start.
        /// </summary>
        public static string Start {
            get {
                return ResourceManager.GetString("Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop.
        /// </summary>
        public static string Stop {
            get {
                return ResourceManager.GetString("Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Streaming DVD files is not supported..
        /// </summary>
        public static string StreamErrorDVDsNotSupported {
            get {
                return ResourceManager.GetString("StreamErrorDVDsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File does not exists or is inaccessible..
        /// </summary>
        public static string StreamErrorFileDoesntExists {
            get {
                return ResourceManager.GetString("StreamErrorFileDoesntExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This file might be corrupt..
        /// </summary>
        public static string StreamErrorFileIsCorrupt {
            get {
                return ResourceManager.GetString("StreamErrorFileIsCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File is empty..
        /// </summary>
        public static string StreamErrorFileIsEmpty {
            get {
                return ResourceManager.GetString("StreamErrorFileIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File is on an inaccessible network share..
        /// </summary>
        public static string StreamErrorInaccessibleNetworkShare {
            get {
                return ResourceManager.GetString("StreamErrorInaccessibleNetworkShare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no path known for this media item..
        /// </summary>
        public static string StreamErrorUnknownPath {
            get {
                return ResourceManager.GetString("StreamErrorUnknownPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Streaming.
        /// </summary>
        public static string Streaming {
            get {
                return ResourceManager.GetString("Streaming", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client.
        /// </summary>
        public static string StreamingClient {
            get {
                return ResourceManager.GetString("StreamingClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        public static string StreamingFile {
            get {
                return ResourceManager.GetString("StreamingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Address.
        /// </summary>
        public static string StreamingIPAddress {
            get {
                return ResourceManager.GetString("StreamingIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kick session.
        /// </summary>
        public static string StreamingKickSession {
            get {
                return ResourceManager.GetString("StreamingKickSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile.
        /// </summary>
        public static string StreamingProfile {
            get {
                return ResourceManager.GetString("StreamingProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progress.
        /// </summary>
        public static string StreamingProgress {
            get {
                return ResourceManager.GetString("StreamingProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable subtitles.
        /// </summary>
        public static string SubtitlesDisabled {
            get {
                return ResourceManager.GetString("SubtitlesDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use external .srt file.
        /// </summary>
        public static string SubtitlesExternal {
            get {
                return ResourceManager.GetString("SubtitlesExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First stream in file.
        /// </summary>
        public static string SubtitlesFirstStream {
            get {
                return ResourceManager.GetString("SubtitlesFirstStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activity.
        /// </summary>
        public static string TabActivity {
            get {
                return ResourceManager.GetString("TabActivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication.
        /// </summary>
        public static string TabAuthentication {
            get {
                return ResourceManager.GetString("TabAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration.
        /// </summary>
        public static string TabConfiguration {
            get {
                return ResourceManager.GetString("TabConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logs.
        /// </summary>
        public static string TabLogs {
            get {
                return ResourceManager.GetString("TabLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugins.
        /// </summary>
        public static string TabPlugins {
            get {
                return ResourceManager.GetString("TabPlugins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project.
        /// </summary>
        public static string TabProject {
            get {
                return ResourceManager.GetString("TabProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to QR-Code.
        /// </summary>
        public static string TabQRCode {
            get {
                return ResourceManager.GetString("TabQRCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Social.
        /// </summary>
        public static string TabSocial {
            get {
                return ResourceManager.GetString("TabSocial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Streaming.
        /// </summary>
        public static string TabStreaming {
            get {
                return ResourceManager.GetString("TabStreaming", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Troubleshooting.
        /// </summary>
        public static string TabTroubleshooting {
            get {
                return ResourceManager.GetString("TabTroubleshooting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WebMediaPortal.
        /// </summary>
        public static string TabWebMediaPortal {
            get {
                return ResourceManager.GetString("TabWebMediaPortal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test.
        /// </summary>
        public static string Test {
            get {
                return ResourceManager.GetString("Test", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Testing credentials, please wait....
        /// </summary>
        public static string TestingCredentials {
            get {
                return ResourceManager.GetString("TestingCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test links for.
        /// </summary>
        public static string TestLinksFor {
            get {
                return ResourceManager.GetString("TestLinksFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close MediaPortal.
        /// </summary>
        public static string TrayCloseMediaPortal {
            get {
                return ResourceManager.GetString("TrayCloseMediaPortal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit.
        /// </summary>
        public static string TrayExit {
            get {
                return ResourceManager.GetString("TrayExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hibernate.
        /// </summary>
        public static string TrayHibernate {
            get {
                return ResourceManager.GetString("TrayHibernate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock.
        /// </summary>
        public static string TrayLock {
            get {
                return ResourceManager.GetString("TrayLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log off.
        /// </summary>
        public static string TrayLogOff {
            get {
                return ResourceManager.GetString("TrayLogOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monitor off.
        /// </summary>
        public static string TrayMonitorOff {
            get {
                return ResourceManager.GetString("TrayMonitorOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open MPExtended Configurator.
        /// </summary>
        public static string TrayOpenConfigurator {
            get {
                return ResourceManager.GetString("TrayOpenConfigurator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open WebMediaPortal.
        /// </summary>
        public static string TrayOpenWebMP {
            get {
                return ResourceManager.GetString("TrayOpenWebMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Powermodes.
        /// </summary>
        public static string TrayPowermodes {
            get {
                return ResourceManager.GetString("TrayPowermodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reboot.
        /// </summary>
        public static string TrayReboot {
            get {
                return ResourceManager.GetString("TrayReboot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screensaver.
        /// </summary>
        public static string TrayScreensaver {
            get {
                return ResourceManager.GetString("TrayScreensaver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutdown.
        /// </summary>
        public static string TrayShutdown {
            get {
                return ResourceManager.GetString("TrayShutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start MediaPortal.
        /// </summary>
        public static string TrayStartMediaPortal {
            get {
                return ResourceManager.GetString("TrayStartMediaPortal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suspend.
        /// </summary>
        public static string TraySuspend {
            get {
                return ResourceManager.GetString("TraySuspend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To check the validity of the requested content please use the following links... You can use localhost to test the service on the same machine. Select one of the IPs from the dropdown list to get urls for testing on other PCs on the network (e.g. to rule out firewall issues)..
        /// </summary>
        public static string TroubleshootingHeaderText {
            get {
                return ResourceManager.GetString("TroubleshootingHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TV logo directory.
        /// </summary>
        public static string TVLogoDirectory {
            get {
                return ResourceManager.GetString("TVLogoDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TVServer.
        /// </summary>
        public static string TVServer {
            get {
                return ResourceManager.GetString("TVServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected error occured. Please file a bugreport with the service&apos;s log files attached..
        /// </summary>
        public static string UnexpectedError {
            get {
                return ResourceManager.GetString("UnexpectedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to update available: version {0}, released on {1}.
        /// </summary>
        public static string UpdateAvailable {
            get {
                return ResourceManager.GetString("UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There already exists a user with this username..
        /// </summary>
        public static string UserAlreadyExists {
            get {
                return ResourceManager.GetString("UserAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter both a username and password for this user. .
        /// </summary>
        public static string UserMustHaveNameAndPassword {
            get {
                return ResourceManager.GetString("UserMustHaveNameAndPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string Username {
            get {
                return ResourceManager.GetString("Username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version:.
        /// </summary>
        public static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revert to default skin.
        /// </summary>
        public static string WebMediaPortalResetSkinButton {
            get {
                return ResourceManager.GetString("WebMediaPortalResetSkinButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WebMediaPortal skin has been reset to the default skin!.
        /// </summary>
        public static string WebMediaPortalResetSkinSuccess {
            get {
                return ResourceManager.GetString("WebMediaPortalResetSkinSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you&apos;ve installed and configured a broken skin in WebMediaPortal which has rendered the application useless, you can reset it to the default skin here..
        /// </summary>
        public static string WebMediaPortalResetSkinText {
            get {
                return ResourceManager.GetString("WebMediaPortalResetSkinText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MPExtended Configurator.
        /// </summary>
        public static string WindowTitle {
            get {
                return ResourceManager.GetString("WindowTitle", resourceCulture);
            }
        }
    }
}
