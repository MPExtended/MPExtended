<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlbumLayoutDescription" xml:space="preserve">
    <value>Album</value>
  </data>
  <data name="ArtistLayoutDescription" xml:space="preserve">
    <value>Artist</value>
  </data>
  <data name="ClientService" xml:space="preserve">
    <value>Client service</value>
  </data>
  <data name="DefaultMediaStreamingProfile" xml:space="preserve">
    <value>Default media streaming profile</value>
  </data>
  <data name="DefaultMusicStreamingProfile" xml:space="preserve">
    <value>Default music streaming profile</value>
  </data>
  <data name="DefaultSkinName" xml:space="preserve">
    <value>default</value>
    <comment>Name of the default skin</comment>
  </data>
  <data name="DefaultTVGroup" xml:space="preserve">
    <value>Default TV Group</value>
  </data>
  <data name="DefaultTVStreamingProfile" xml:space="preserve">
    <value>Default TV streaming profile</value>
  </data>
  <data name="DirectStreamingProfileDescription" xml:space="preserve">
    <value>Direct: best performance, works only on local network</value>
  </data>
  <data name="DirectWhenPossibleDescription" xml:space="preserve">
    <value>Direct when possible, otherwise proxied</value>
  </data>
  <data name="EnableAlbumPlayer" xml:space="preserve">
    <value>Enable the album player for music?</value>
  </data>
  <data name="ErrorNoValidClientService" xml:space="preserve">
    <value>Please specify a valid MAS URL</value>
  </data>
  <data name="ErrorNoValidLanguage" xml:space="preserve">
    <value>Please select a valid language</value>
  </data>
  <data name="ErrorNoValidMediaProfile" xml:space="preserve">
    <value>Please select a valid media streaming profile</value>
  </data>
  <data name="ErrorNoValidMovieDatabase" xml:space="preserve">
    <value>Please select a valid movie database</value>
  </data>
  <data name="ErrorNoValidMusicDatabase" xml:space="preserve">
    <value>Please select a valid music database</value>
  </data>
  <data name="ErrorNoValidMusicProfile" xml:space="preserve">
    <value>Please select a valid music streaming profile</value>
  </data>
  <data name="ErrorNoValidServerService" xml:space="preserve">
    <value>Please specify a valid TAS URL</value>
  </data>
  <data name="ErrorNoValidSkin" xml:space="preserve">
    <value>Please select a valid skin</value>
  </data>
  <data name="ErrorNoValidTVGroup" xml:space="preserve">
    <value>Please select a valid TVgroup</value>
  </data>
  <data name="ErrorNoValidTVProfile" xml:space="preserve">
    <value>Please select a valid TV streaming profile</value>
  </data>
  <data name="ErrorNoValidTVShowDatabase" xml:space="preserve">
    <value>Please select a valid TV show database</value>
  </data>
  <data name="FailedToConnectToClient" xml:space="preserve">
    <value>Failed to connect to the specified client service</value>
  </data>
  <data name="FailedToConnectToServer" xml:space="preserve">
    <value>Failed to connect to the specified server service</value>
  </data>
  <data name="FieldRequired" xml:space="preserve">
    <value>{0} field is required</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LogOnPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="LogOnRememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="LogOnUsername" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="MovieDatabase" xml:space="preserve">
    <value>Movie database</value>
  </data>
  <data name="MultiseatMAS" xml:space="preserve">
    <value>MediaPortal server (MAS)</value>
  </data>
  <data name="MultiseatTAS" xml:space="preserve">
    <value>TV Server (TAS)</value>
  </data>
  <data name="MusicDatabase" xml:space="preserve">
    <value>Music database</value>
  </data>
  <data name="MusicLayout" xml:space="preserve">
    <value>Music layout</value>
  </data>
  <data name="ProxiedStreamingProfileDescription" xml:space="preserve">
    <value>Proxied: instantly stops timeshiftings, works over the internet</value>
  </data>
  <data name="ScheduleChannel" xml:space="preserve">
    <value>Channel</value>
  </data>
  <data name="ScheduleEndTime" xml:space="preserve">
    <value>Endtime</value>
  </data>
  <data name="ScheduleSelectValidChannel" xml:space="preserve">
    <value>Select a valid channel</value>
  </data>
  <data name="ScheduleSelectValidType" xml:space="preserve">
    <value>Select a valid schedule type</value>
  </data>
  <data name="ScheduleStartTime" xml:space="preserve">
    <value>Starttime</value>
  </data>
  <data name="ScheduleTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="ScheduleType" xml:space="preserve">
    <value>Schedule type</value>
  </data>
  <data name="ScheduleTypeDaily" xml:space="preserve">
    <value>Daily</value>
  </data>
  <data name="ScheduleTypeEveryTimeOnEveryChannel" xml:space="preserve">
    <value>Every time on every channel</value>
  </data>
  <data name="ScheduleTypeEveryTimeOnThisChannel" xml:space="preserve">
    <value>Every time on this channel</value>
  </data>
  <data name="ScheduleTypeOnce" xml:space="preserve">
    <value>Once</value>
  </data>
  <data name="ScheduleTypeWeekends" xml:space="preserve">
    <value>Weekends</value>
  </data>
  <data name="ScheduleTypeWeekly" xml:space="preserve">
    <value>Weekly</value>
  </data>
  <data name="ScheduleTypeWeeklyOnThisChannel" xml:space="preserve">
    <value>Weekly on this channel</value>
  </data>
  <data name="ScheduleTypeWorkingDays" xml:space="preserve">
    <value>Working days</value>
  </data>
  <data name="SearchResultAlbum" xml:space="preserve">
    <value>{0} (album) by {1}</value>
  </data>
  <data name="SearchResultChannelGroup" xml:space="preserve">
    <value>{0} (channel group)</value>
  </data>
  <data name="SearchResultProgram" xml:space="preserve">
    <value>{0} ({1} on {2})</value>
  </data>
  <data name="SearchResultRecording" xml:space="preserve">
    <value>{0} (recorded on {1})</value>
  </data>
  <data name="SearchResultSchedule" xml:space="preserve">
    <value>{0} (schedule)</value>
  </data>
  <data name="SearchResultTrack" xml:space="preserve">
    <value>{0} by {1}</value>
  </data>
  <data name="ServerService" xml:space="preserve">
    <value>Server service</value>
  </data>
  <data name="Skin" xml:space="preserve">
    <value>Skin</value>
  </data>
  <data name="StateIdle" xml:space="preserve">
    <value>Idle</value>
  </data>
  <data name="StateRecording" xml:space="preserve">
    <value>Recording</value>
  </data>
  <data name="StateScanning" xml:space="preserve">
    <value>Scanning</value>
  </data>
  <data name="StateTimeshifting" xml:space="preserve">
    <value>Timeshifting</value>
  </data>
  <data name="StreamType" xml:space="preserve">
    <value>Stream type</value>
  </data>
  <data name="TVShowDatabase" xml:space="preserve">
    <value>TV Show database</value>
  </data>
  <data name="UsernamePasswordIncorrect" xml:space="preserve">
    <value>The username or password provided is incorrect.</value>
  </data>
  <data name="VLCPlayerEnableDeinterlacing" xml:space="preserve">
    <value>VLC player: enable deinterlacing by default?</value>
  </data>
</root>