@model SettingsViewModel
@{
    ViewBag.Title = UIStrings.Settings;
}

<h2>@UIStrings.Settings</h2>
<br /><br />

@using (Html.BeginForm())
{
    <div>
    <table class="webmp">
        <tr>
            <td>
                @Html.LabelFor(x => x.Language)
            </td>
            <td>
                @Html.DropDownListFor(x => x.Language)
                @Html.ValidationMessageFor(x => x.Language)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(x => x.Skin)
            </td>
            <td>
            
                @Html.DropDownListFor(x => x.Skin)
                @Html.ValidationMessageFor(x => x.Skin)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(x => x.StreamType)
            </td>
            <td>
                @Html.EnumDropDownListFor(x => x.StreamType)
                @Html.ValidationMessageFor(x => x.StreamType)
            </td>
        </tr>
		<tr>
			<td>
                @Html.LabelFor(x => x.EnableDeinterlace)
            </td>
            <td>
                @Html.RadioButtonFor(x => x.EnableDeinterlace, "true") @UIStrings.Yes
                &nbsp;&nbsp;&nbsp;&nbsp; 
                @Html.RadioButtonFor(x => x.EnableDeinterlace, "false") @UIStrings.No
                @Html.ValidationMessageFor(x => x.EnableDeinterlace)
            </td>
        </tr>
        @{  if (Model.ShowTASConfiguration)
            {
                <tr>
                    <td>
                        @Html.LabelFor(x => x.SelectedGroup)
                    </td>
                    <td>
                        @Html.DropDownListFor(x => x.SelectedGroup)
                        @Html.ValidationMessageFor(x => x.SelectedGroup)
                    </td>
                </tr>
            }
        }
        @{  if (Model.ShowMASConfiguration)
            {
                <tr>
                    <td>
                        @Html.LabelFor(x => x.EnableAlbumPlayer)
                    </td>
                    <td>
                        @Html.RadioButtonFor(x => x.EnableAlbumPlayer, "true") @UIStrings.Yes
                        &nbsp;&nbsp;&nbsp;&nbsp; 
                        @Html.RadioButtonFor(x => x.EnableAlbumPlayer, "false") @UIStrings.No
                        @Html.ValidationMessageFor(x => x.EnableAlbumPlayer)
                    </td>
                </tr>
                <tr>
                    <td colspan="2">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(x => x.TVShowProvider)
                    </td>
                    <td>
                        @Html.DropDownListFor(x => x.TVShowProvider)
                        @Html.ValidationMessageFor(x => x.TVShowProvider)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(x => x.MovieProvider)
                    </td>
                    <td>
                        @Html.DropDownListFor(x => x.MovieProvider)
                        @Html.ValidationMessageFor(x => x.MovieProvider)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(x => x.MusicProvider)
                    </td>
                    <td>
                        @Html.DropDownListFor(x => x.MusicProvider)
                        @Html.ValidationMessageFor(x => x.MusicProvider)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(x => x.MusicLayout)
                    </td>
                    <td>
                        @Html.EnumDropDownListFor(x => x.MusicLayout)
                        @Html.ValidationMessageFor(x => x.MusicLayout)
                    </td>
                </tr>
            }
        }

        @for(int i = 0; i < Model.Platforms.Count; i++)
        {
            @Html.HiddenFor(x => x.Platforms[i].Name)

            <tr>
                <td colspan="2">&nbsp;</td>
            </tr>    
            <tr>
                <td colspan="2">
                    <h2>@Model.Platforms[i].Name</h2>
                </td>
            </tr>
            
            if (Model.ShowTASConfiguration)
            {
                <tr>
                    <td>
                        @Html.LabelFor(x => x.Platforms[i].Tv)
                    </td>
                    <td>                                
                        @Html.DropDownListFor(x => x.Platforms[i].Tv)
                        @Html.ValidationMessageFor(x => x.Platforms[i].Tv)
                    </td>
                </tr>
            }

            if (Model.ShowMASConfiguration)
            {
                <tr>
                    <td>
                        @Html.LabelFor(x => x.Platforms[i].Video)
                    </td>
                    <td>                                
                        @Html.DropDownListFor(x => x.Platforms[i].Video)
                        @Html.ValidationMessageFor(x => x.Platforms[i].Video)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(x => x.Platforms[i].Audio)
                    </td>
                    <td>                                
                        @Html.DropDownListFor(x => x.Platforms[i].Audio)
                        @Html.ValidationMessageFor(x => x.Platforms[i].Audio)
                    </td>
                </tr>
            }
        }
    </table>
    <br />
    <input type="submit" value="@UIStrings.Save" />
    </div>
}

<br />

<h2>@UIStrings.Multiseat</h2>
@Html.ActionLink(UIStrings.MultiseatConfiguration, "Services")
<br />
<br />

<h2>@UIStrings.About</h2>
@Html.Raw(String.Format(UIStrings.Version, @ViewBag.Version))
<a href="#" id="update_checker">Check for updates</a>.
@{
    Html.jQuery().Enable();
    Html.Assets().AddViewScript("Settings/Index.js");
    Html.jQuery().AddDocumentReadyScript("attachUpdateChecker('a#update_checker', '" + Url.Action("CheckForUpdates") + "', '" + UIStrings.UpdateCheckerError + "', " +
        "'" + UIStrings.UpdateCheckerNoUpdates + "', '" + UIStrings.UpdateCheckerUpdate + "');");
}
